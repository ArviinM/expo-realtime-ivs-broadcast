{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventSubscription } from 'expo-modules-core';\nimport ExpoRealtimeIvsBroadcastModule from './ExpoRealtimeIvsBroadcastModule';\nimport { \n    LocalAudioConfig, \n    LocalVideoConfig, \n    PermissionStatusMap,\n    StageConnectionStatePayload,\n    PublishStatePayload,\n    StageErrorPayload,\n    CameraSwappedPayload,\n    CameraSwapErrorPayload,\n    ParticipantPayload,\n    ParticipantStreamsPayload,\n    ParticipantStreamsRemovedPayload,\n} from './ExpoRealtimeIvsBroadcast.types';\n\n// Re-export all type definitions\nexport * from './ExpoRealtimeIvsBroadcast.types';\n\n// Export the native view components\nexport { ExpoIVSStagePreviewView } from './ExpoIVSStagePreviewView';\nexport { ExpoIVSRemoteStreamView } from './ExpoIVSRemoteStreamView';\n\n// Export the custom hook\nexport { useStageParticipants } from './useStageParticipants';\n\n// --- Native Module Methods ---\nexport async function initializeStage(audioConfig?: LocalAudioConfig, videoConfig?: LocalVideoConfig): Promise<void> {\n  return await ExpoRealtimeIvsBroadcastModule.initializeStage(audioConfig, videoConfig);\n}\n\nexport async function initializeLocalStreams(audioConfig?: LocalAudioConfig, videoConfig?: LocalVideoConfig): Promise<void> {\n  return await ExpoRealtimeIvsBroadcastModule.initializeLocalStreams(audioConfig, videoConfig);\n}\n\nexport async function joinStage(token: string, options?: { targetParticipantId?: string }): Promise<void> {\n  return await ExpoRealtimeIvsBroadcastModule.joinStage(token, options);\n}\n\nexport async function leaveStage(): Promise<void> {\n  return await ExpoRealtimeIvsBroadcastModule.leaveStage();\n}\n\nexport async function setStreamsPublished(published: boolean): Promise<void> {\n  return await ExpoRealtimeIvsBroadcastModule.setStreamsPublished(published);\n}\n\nexport async function swapCamera(): Promise<void> {\n  return await ExpoRealtimeIvsBroadcastModule.swapCamera();\n}\n\nexport async function setMicrophoneMuted(muted: boolean): Promise<void> {\n  return await ExpoRealtimeIvsBroadcastModule.setMicrophoneMuted(muted);\n}\n\nexport async function requestPermissions(): Promise<PermissionStatusMap> {\n  return await ExpoRealtimeIvsBroadcastModule.requestPermissions();\n}\n\n// --- Event Emitter ---\nexport function addOnStageConnectionStateChangedListener(\n  listener: (event: StageConnectionStatePayload) => void\n): EventSubscription {\n  return ExpoRealtimeIvsBroadcastModule.addListener('onStageConnectionStateChanged', listener);\n}\n\nexport function addOnPublishStateChangedListener(\n  listener: (event: PublishStatePayload) => void\n): EventSubscription {\n  return ExpoRealtimeIvsBroadcastModule.addListener('onPublishStateChanged', listener);\n}\n\nexport function addOnStageErrorListener(\n  listener: (event: StageErrorPayload) => void\n): EventSubscription {\n  return ExpoRealtimeIvsBroadcastModule.addListener('onStageError', listener);\n}\n\nexport function addOnCameraSwappedListener(\n  listener: (event: CameraSwappedPayload) => void\n): EventSubscription {\n  return ExpoRealtimeIvsBroadcastModule.addListener('onCameraSwapped', listener);\n}\n\nexport function addOnCameraSwapErrorListener(\n  listener: (event: CameraSwapErrorPayload) => void\n): EventSubscription {\n  return ExpoRealtimeIvsBroadcastModule.addListener('onCameraSwapError', listener);\n}\n\nexport function addOnParticipantJoinedListener(\n  listener: (event: ParticipantPayload) => void\n): EventSubscription {\n  return ExpoRealtimeIvsBroadcastModule.addListener('onParticipantJoined', listener);\n}\n\nexport function addOnParticipantLeftListener(\n  listener: (event: ParticipantPayload) => void\n): EventSubscription {\n  return ExpoRealtimeIvsBroadcastModule.addListener('onParticipantLeft', listener);\n}\n\nexport function addOnParticipantStreamsAddedListener(\n  listener: (event: ParticipantStreamsPayload) => void\n): EventSubscription {\n  return ExpoRealtimeIvsBroadcastModule.addListener('onParticipantStreamsAdded', listener);\n}\n\nexport function addOnParticipantStreamsRemovedListener(\n  listener: (event: ParticipantStreamsRemovedPayload) => void\n): EventSubscription {\n  return ExpoRealtimeIvsBroadcastModule.addListener('onParticipantStreamsRemoved', listener);\n}\n"]}